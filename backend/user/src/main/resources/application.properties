spring.application.name=client

# Use H2 in-memory database
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# Let JPA create/update database tables automatically
spring.jpa.hibernate.ddl-auto=update

# Show SQL statements in the console/logs (optional)
spring.jpa.show-sql=true

# Enable H2 console for debugging
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# # OAuth2 Client Registration for Cognito
# spring.security.oauth2.client.registration.cognito.client-id=3e924q4agk1f7j98ohrfkeivko

# # Client secret needs to be referenced here,, think about how to settle this later
# spring.security.oauth2.client.registration.cognito.client-secret=${COGNITO_CLIENT_SECRET}
# spring.security.oauth2.client.registration.cognito.scope=email,openid,phone
# spring.security.oauth2.client.registration.cognito.redirect-uri=https://d84l1y8p4kdic.cloudfront.net

# # OAuth2 Provider Configuration for Cognito
# spring.security.oauth2.client.provider.cognito.issuer-uri=https://cognito-idp.ap-southeast-1.amazonaws.com/ap-southeast-1_tOPTKzj85
# spring.security.oauth2.client.provider.cognito.user-name-attribute=username

# # Other non-sensitive information we might need down the road
# spring.security.oauth2.client.registration.cognito.user-pool-id=ap-southeast-1_tOPTKzj85
# spring.security.oauth2.client.registration.cognito.user-pool-arn=arn:aws:cognito-idp:ap-southeast-1:677761253473:userpool/ap-southeast-1_tOPTKzj85
# # This is the token signing key URL
# spring.security.oauth2.client.registration.cognito.jwks-url=https://cognito-idp.ap-southeast-1.amazonaws.com/ap-southeast-1_tOPTKzj85/.well-known/jwks.json

# New non-hardcoded environment variables
spring.security.oauth2.client.provider.cognito.issuer-uri=https://cognito-idp.${AWS_REGION}.amazonaws.com/${COGNITO_USER_POOL_ID}
spring.security.oauth2.client.registration.cognito.client-id=${COGNITO_CLIENT_ID}
spring.security.oauth2.client.registration.cognito.client-secret=${COGNITO_CLIENT_SECRET}

# Notes:
# Spring Security by default uses a redirect-uri in the format: {baseUrl}/login/oauth2/code/{registrationId}
# For example: http://localhost:8080/login/oauth2/code/cognito
# See more: https://docs.spring.io/spring-security/reference/servlet/oauth2/login/core.html#oauth2login-sample-redirect-uri