spring.application.name=client

# RDS Database configuration for production
# Replace the placeholders with the corresponding environment variables injected by Terraform:
#   DATABASE_HOST, DATABASE_PORT, DATABASE_NAME, DATABASE_USER, DATABASE_PASSWORD
spring.datasource.url=jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=${DATABASE_USER}
spring.datasource.password=${DATABASE_PASSWORD}

# JPA configuration: adjust ddl-auto as needed for your production strategy.
spring.jpa.hibernate.ddl-auto=update
# It's a good idea to disable SQL logging in production.
spring.jpa.show-sql=false

# Redis (ElastiCache) configuration for production
# Replace REDIS_HOST and REDIS_PORT with the values injected by Terraform.
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}

# Allow bean definition overriding if necessary
spring.main.allow-bean-definition-overriding=true